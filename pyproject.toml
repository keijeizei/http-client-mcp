[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "http-client-mcp"
version = "0.1.0"
description = "A Model Context Protocol server for making HTTP requests with comprehensive support"
readme = "README.md"
license = "MIT"
authors = [
    { name = "MCP Community" }
]
maintainers = [
    { name = "MCP Community" }
]
keywords = [
    "mcp",
    "model-context-protocol",
    "http",
    "http-client",
    "api",
    "rest",
    "qa",
    "testing",
    "automation"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Internet :: WWW/HTTP",
]
requires-python = ">=3.9"
dependencies = [
    "mcp>=0.1.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-httpx>=0.30.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/http-client-mcp"
Documentation = "https://github.com/yourusername/http-client-mcp#readme"
Repository = "https://github.com/yourusername/http-client-mcp"
Issues = "https://github.com/yourusername/http-client-mcp/issues"

[project.scripts]
http-client-mcp = "http_client_mcp.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src/http_client_mcp"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
strict_equality = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]